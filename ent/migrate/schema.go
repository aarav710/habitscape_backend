// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "habit_admins", Type: field.TypeInt},
		{Name: "user_admins", Type: field.TypeInt},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admins_habits_admins",
				Columns:    []*schema.Column{AdminsColumns[1]},
				RefColumns: []*schema.Column{HabitsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "admins_users_admins",
				Columns:    []*schema.Column{AdminsColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CommentsColumns holds the columns for the "comments" table.
	CommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "text", Type: field.TypeString, Size: 255},
		{Name: "date_created", Type: field.TypeTime},
		{Name: "post_comments", Type: field.TypeInt},
		{Name: "user_comments", Type: field.TypeInt},
	}
	// CommentsTable holds the schema information for the "comments" table.
	CommentsTable = &schema.Table{
		Name:       "comments",
		Columns:    CommentsColumns,
		PrimaryKey: []*schema.Column{CommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "comments_posts_comments",
				Columns:    []*schema.Column{CommentsColumns[3]},
				RefColumns: []*schema.Column{PostsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "comments_users_comments",
				Columns:    []*schema.Column{CommentsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CompletionsColumns holds the columns for the "completions" table.
	CompletionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "text", Type: field.TypeString, Size: 255},
		{Name: "date_completed", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"completed", "missed", "skipped"}},
		{Name: "habit_completions", Type: field.TypeInt},
		{Name: "user_completions", Type: field.TypeInt},
	}
	// CompletionsTable holds the schema information for the "completions" table.
	CompletionsTable = &schema.Table{
		Name:       "completions",
		Columns:    CompletionsColumns,
		PrimaryKey: []*schema.Column{CompletionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "completions_habits_completions",
				Columns:    []*schema.Column{CompletionsColumns[4]},
				RefColumns: []*schema.Column{HabitsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "completions_users_completions",
				Columns:    []*schema.Column{CompletionsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// HabitsColumns holds the columns for the "habits" table.
	HabitsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "description", Type: field.TypeString, Size: 255},
		{Name: "frequency", Type: field.TypeInt},
		{Name: "title", Type: field.TypeString},
		{Name: "photo_url", Type: field.TypeString},
		{Name: "date_created", Type: field.TypeTime},
	}
	// HabitsTable holds the schema information for the "habits" table.
	HabitsTable = &schema.Table{
		Name:       "habits",
		Columns:    HabitsColumns,
		PrimaryKey: []*schema.Column{HabitsColumns[0]},
	}
	// InvitationsColumns holds the columns for the "invitations" table.
	InvitationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "admin_invitations", Type: field.TypeInt},
		{Name: "habit_invitations", Type: field.TypeInt},
		{Name: "user_invitations", Type: field.TypeInt},
	}
	// InvitationsTable holds the schema information for the "invitations" table.
	InvitationsTable = &schema.Table{
		Name:       "invitations",
		Columns:    InvitationsColumns,
		PrimaryKey: []*schema.Column{InvitationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "invitations_admins_invitations",
				Columns:    []*schema.Column{InvitationsColumns[1]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "invitations_habits_invitations",
				Columns:    []*schema.Column{InvitationsColumns[2]},
				RefColumns: []*schema.Column{HabitsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "invitations_users_invitations",
				Columns:    []*schema.Column{InvitationsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// LikesColumns holds the columns for the "likes" table.
	LikesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "post_likes", Type: field.TypeInt},
		{Name: "user_likes", Type: field.TypeInt},
	}
	// LikesTable holds the schema information for the "likes" table.
	LikesTable = &schema.Table{
		Name:       "likes",
		Columns:    LikesColumns,
		PrimaryKey: []*schema.Column{LikesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "likes_posts_likes",
				Columns:    []*schema.Column{LikesColumns[1]},
				RefColumns: []*schema.Column{PostsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "likes_users_likes",
				Columns:    []*schema.Column{LikesColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PostsColumns holds the columns for the "posts" table.
	PostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "photo_url", Type: field.TypeString},
		{Name: "caption", Type: field.TypeString, Size: 255},
		{Name: "date_created", Type: field.TypeTime},
		{Name: "habit_posts", Type: field.TypeInt},
		{Name: "user_posts", Type: field.TypeInt},
	}
	// PostsTable holds the schema information for the "posts" table.
	PostsTable = &schema.Table{
		Name:       "posts",
		Columns:    PostsColumns,
		PrimaryKey: []*schema.Column{PostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "posts_habits_posts",
				Columns:    []*schema.Column{PostsColumns[4]},
				RefColumns: []*schema.Column{HabitsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "posts_users_posts",
				Columns:    []*schema.Column{PostsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "bio", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "photo_url", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserHabitsColumns holds the columns for the "user_habits" table.
	UserHabitsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "habit_id", Type: field.TypeInt},
	}
	// UserHabitsTable holds the schema information for the "user_habits" table.
	UserHabitsTable = &schema.Table{
		Name:       "user_habits",
		Columns:    UserHabitsColumns,
		PrimaryKey: []*schema.Column{UserHabitsColumns[0], UserHabitsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_habits_user_id",
				Columns:    []*schema.Column{UserHabitsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_habits_habit_id",
				Columns:    []*schema.Column{UserHabitsColumns[1]},
				RefColumns: []*schema.Column{HabitsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		CommentsTable,
		CompletionsTable,
		HabitsTable,
		InvitationsTable,
		LikesTable,
		PostsTable,
		UsersTable,
		UserHabitsTable,
	}
)

func init() {
	AdminsTable.ForeignKeys[0].RefTable = HabitsTable
	AdminsTable.ForeignKeys[1].RefTable = UsersTable
	CommentsTable.ForeignKeys[0].RefTable = PostsTable
	CommentsTable.ForeignKeys[1].RefTable = UsersTable
	CompletionsTable.ForeignKeys[0].RefTable = HabitsTable
	CompletionsTable.ForeignKeys[1].RefTable = UsersTable
	InvitationsTable.ForeignKeys[0].RefTable = AdminsTable
	InvitationsTable.ForeignKeys[1].RefTable = HabitsTable
	InvitationsTable.ForeignKeys[2].RefTable = UsersTable
	LikesTable.ForeignKeys[0].RefTable = PostsTable
	LikesTable.ForeignKeys[1].RefTable = UsersTable
	PostsTable.ForeignKeys[0].RefTable = HabitsTable
	PostsTable.ForeignKeys[1].RefTable = UsersTable
	UserHabitsTable.ForeignKeys[0].RefTable = UsersTable
	UserHabitsTable.ForeignKeys[1].RefTable = HabitsTable
}
